{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","hooks/UseFetchGifs.js","Components/GifGridItem.js","Components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAsCeA,EAlCK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMd,SACA,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAnBsB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCShBG,EAlBH,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAELC,EAFK,iDAE4CC,UAAWH,GAFvD,+DAIQI,MAAMF,GAJd,cAILG,EAJK,gBAMUA,EAAKC,OANf,uBAMJC,EANI,EAMJA,KAEOC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAZvC,kBAeIL,GAfJ,4CAAH,sDCiCGQ,EA7BM,SAAEhB,GAEnB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLU,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAnBAC,qBAAW,WAEPrB,EAAQC,GAEPqB,MAAM,SAAAC,GAEHC,YAAY,WAERJ,EAAS,CACLZ,KAAMe,EACNL,SAAS,MAGd,UAIR,CAACjB,IAEGkB,GCdIM,EAbK,SAAC,GAAsB,EAApBb,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAG9B,OACI,sBAAKY,UAAU,4CAAf,UAEA,qBAAKC,IAAMb,EAAMc,IAAMf,IACvB,kCAAMA,EAAN,WCsBOgB,EA1BC,SAAC,GAAgB,IAAf5B,EAAc,EAAdA,SAGlB,EAAgCgB,EAAchB,GAAlCc,EAAZ,EAAOP,KAAaU,EAApB,EAAoBA,QAGhB,OACI,qCACI,qBAAIQ,UAAU,wCAAd,cAAyDzB,EAAzD,OAEFiB,GAAW,mBAAGQ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,WAAf,SAGYX,EAAOL,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAEKA,GADCA,EAAIC,aCSfkB,EA3BM,WAGjB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAKA,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BACM6C,EAAWrB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MCdtB+B,IAASC,OACJ,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f17faeb7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ({ setCategories })=> {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n        setCategories( cats => [ inputValue, ...cats,]);\r\n        setInputValue('');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit}>\r\n        <input \r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange= { handleInputChange }\r\n        />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory","const getGif = async( category ) => {\r\n\r\n    const URL = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&api_key=jjVL5k5YOKRQZTsf44JtO10NKU3luswp&limit=10`\r\n    \r\n    const resp = await fetch(URL);\r\n    \r\n    const {data} = await resp.json();\r\n    \r\n            const gifs = data.map(img => {\r\n                return{\r\n                    id: img.id,\r\n                    title: img.title,\r\n                    url: img.images?.downsized_medium.url\r\n                }\r\n            })         \r\n            return gifs;\r\n        }\r\n\r\nexport default getGif","import { useEffect, useState } from \"react\"\r\nimport getGif from \"../helpers/getGifs\";\r\n\r\n\r\nconst useFetchGifs = ( category )=> {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n    useEffect( () => {\r\n        \r\n        getGif( category )\r\n\r\n        .then( imgs => {\r\n\r\n            setTimeout( ()=> {\r\n                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            }, 3000);\r\n           \r\n        })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default useFetchGifs","import React from 'react'\r\n\r\nconst GifGridItem = ( {id, title, url}) => {\r\n\r\n\r\n    return(\r\n        <div className=\"box animate__animated animate__fadeInLeft\">\r\n\r\n        <img src={ url } alt={ title } />\r\n        <p> { title } </p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem","import React from 'react'\r\nimport useFetchGifs from '../hooks/UseFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n\r\nconst {data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInLeft\"> { category } </h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n        <div className=\"box-grid\">\r\n        \r\n                {\r\n                    images.map( img => (\r\n                    <GifGridItem\r\n                    key={ img.id } \r\n                    { ...img } />\r\n                    ))\r\n                }\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default GifGrid","import React, { useState } from 'react'\r\nimport AddCategory from './Components/AddCategory'\r\nimport GifGrid from './Components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['One piece'])\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, 'HunterXHunter']);\r\n    //     //setCategories( cats => [ ...cats, 'HunterXHunter']);\r\n    \r\n    return (\r\n        <>\r\n        <h2>GifExpertAPP</h2>\r\n        <AddCategory setCategories={ setCategories } />\r\n        <hr/>\r\n\r\n        <ol>\r\n            { categories.map( category => \r\n                <GifGrid\r\n                key= {category}\r\n                category= {category}\r\n                />\r\n             )\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n     <GifExpertApp />,\n   document.getElementById('root')\n);\n\n"],"sourceRoot":""}